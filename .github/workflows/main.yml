on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install -r ./backend/requirements.txt
    - name: Test with flake8
      run: |
        python -m flake8 backend/

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./backend/
          push: true
          tags: kopf8/foodgram_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./frontend/
          push: true
          tags: kopf8/foodgram_frontend:latest

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./infra/
          push: true
          tags: kopf8/foodgram_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v5
    - name: Copy docker-compose.production.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "infra/docker-compose.production.yml"
        target: "/home/foodgram"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          sudo docker system prune -af
          sudo npm cache clean --force
          sudo apt clean
          sudo journalctl --vacuum-time=1d
          cd /home/foodgram
          sudo docker compose -f infra/docker-compose.production.yml pull
          sudo docker compose -f infra/docker-compose.production.yml down
          sudo docker compose -f infra/docker-compose.production.yml up -d
          sudo docker compose -f infra/docker-compose.production.yml exec backend python manage.py migrate
          sudo docker compose -f infra/docker-compose.production.yml exec backend python manage.py collectstatic
          sudo docker compose -f infra/docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/
          sudo docker compose -f infra/docker-compose.production.yml exec backend python manage.py import_data

  success_send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send success message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Deploy for project "${{ github.repository }}" finished with 0 problems.
          User: ${{ github.actor }}
          Commit: ${{ github.event.commits[0].message }}
          Link on commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}

  failure_send_message:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
      - deploy
    steps:
      - name: Send failure message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Deploy for project "${{ github.repository }}" was not finished due to problems.
            User: ${{ github.actor }}
            Commit: ${{ github.event.commits[0].message }}
            Link on commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}